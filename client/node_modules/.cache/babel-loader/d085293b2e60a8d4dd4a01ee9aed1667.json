{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slypx\\\\Desktop\\\\code\\\\HW21\\\\book-search\\\\client\\\\src\\\\utils\\\\GlobalState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreContext = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_BOOK\":\n      return { ...state,\n        saved: [action.payload],\n        loading: false\n      };\n\n    case \"FIND_BOOK\":\n      return { ...state,\n        books: [action.payload],\n        loading: false\n      };\n\n    case \"REMOVE_BOOK\":\n      return { ...state,\n        books: state.books.filter(book => {\n          // return book._id !== action._id;\n          return state;\n        })\n      };\n\n    case \"UPDATE_BOOK\":\n      return { ...state,\n        books: [...state.books],\n        loading: false\n      };\n\n    case \"LOADING\":\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({\n  value = [],\n  ...props\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    books: [],\n    currentBook: {\n      _id: 0,\n      title: \"\",\n      authors: \"\",\n      description: \"\",\n      image: \"\",\n      link: \"\"\n    },\n    saved: [],\n    loading: false\n  });\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: [state, dispatch],\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 12\n  }, this);\n};\n\n_s(StoreProvider, \"r7zZResPXXLu+uh+IP512XwWhpY=\");\n\n_c = StoreProvider;\n\nconst useStoreContext = () => {\n  _s2();\n\n  return useContext(StoreContext);\n};\n\n_s2(useStoreContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { useStoreContext, StoreProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["C:/Users/slypx/Desktop/code/HW21/book-search/client/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","StoreContext","Provider","reducer","state","action","type","saved","payload","loading","books","filter","book","StoreProvider","value","props","dispatch","currentBook","_id","title","authors","description","image","link","useStoreContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;;AAIA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAeD,YAArB;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,KAAK,EAAE,CAACF,MAAM,CAACG,OAAR,CAFJ;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHM,QAAAA,KAAK,EAAE,CAACL,MAAM,CAACG,OAAR,CAFJ;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAU;AAChC;AACA,iBAAOR,KAAP;AACH,SAHM;AAFJ,OAAP;;AAQJ,SAAK,aAAL;AACI,aAAM,EACF,GAAGA,KADD;AAEFM,QAAAA,KAAK,EAAE,CAAC,GAAGN,KAAK,CAACM,KAAV,CAFL;AAGFD,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAMJ,SAAK,SAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHK,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ;AACI,aAAOL,KAAP;AArCR;AAuCH,CAxCD;;AA0CA,MAAMS,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAc,KAAGC;AAAjB,CAAD,KAA8B;AAAA;;AAChD,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBjB,UAAU,CAACI,OAAD,EAAU;AAC1CO,IAAAA,KAAK,EAAE,EADmC;AAE1CO,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE,CADI;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,WAAW,EAAE,EAJJ;AAKTC,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,IAAI,EAAE;AANG,KAF6B;AAU1ChB,IAAAA,KAAK,EAAE,EAVmC;AAW1CE,IAAAA,OAAO,EAAE;AAXiC,GAAV,CAApC;AAcA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACL,KAAD,EAAQY,QAAR,CAAjB;AAAA,OAAwCD;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAhBD;;GAAMF,a;;KAAAA,a;;AAkBN,MAAMW,eAAe,GAAG,MAAM;AAAA;;AAC1B,SAAOxB,UAAU,CAACC,YAAD,CAAjB;AACH,CAFD;;IAAMuB,e;;AAIN,SAASA,eAAT,EAA0BX,aAA1B","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\n\n\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => { \n    switch (action.type) {\n        case \"ADD_BOOK\":\n            return {\n                ...state,\n                saved: [action.payload],\n                loading: false\n            };\n        case \"FIND_BOOK\":\n            return {\n                ...state,\n                books: [action.payload],\n                loading: false\n            };\n        \n        case \"REMOVE_BOOK\":\n            return {\n                ...state,\n                books: state.books.filter((book) => {\n                    // return book._id !== action._id;\n                    return state\n                })\n            };\n\n        case \"UPDATE_BOOK\":\n            return{\n                ...state,\n                books: [...state.books],\n                loading: false\n            };\n\n        case \"LOADING\":\n            return {\n                ...state,\n                loading: true\n            };\n\n        default:\n            return state;\n    }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, {\n        books: [],\n        currentBook: {\n            _id: 0,\n            title: \"\",\n            authors: \"\",\n            description: \"\",\n            image: \"\",\n            link: \"\"\n        },\n        saved: [],\n        loading: false\n    });\n\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { useStoreContext, StoreProvider };"]},"metadata":{},"sourceType":"module"}